trigger: none

pool: Self hosted pool

resources:
  repositories:
    - repository: templates
      type: git
      name: "Consumer_Portals/DevOps-Repo"
      ref: refs/heads/dev

variables:
  PNPM_VERSION: 10.5.2
  NODE_VERSION: 20.x
  # For Turbo caching
  TURBO_TOKEN: $(TURBO_TOKEN)
  TURBO_TEAM: $(TURBO_TEAM)
  # Security and performance
  SECURITY_AUDIT_LEVEL: moderate
  PERFORMANCE_BUDGET: 500KB

steps:

  - task: NodeTool@0
    inputs:
      versionSpec: "20.x"
    displayName: "Install Node.js"
  
  # Configure corporate proxy settings
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Configure npm proxy
        npm config set proxy http://webproxy.bcbst.com:80
        npm config set https-proxy https://webproxy.bcbst.com:443
        npm config set registry http://registry.npmjs.org/
        
        # Configure git proxy
        git config --global http.proxy http://webproxy.bcbst.com:80
        git config --global https.proxy https://webproxy.bcbst.com:443
        
        Write-Host "Proxy configuration completed"
    displayName: 'Configure Corporate Proxy'

  # Install pnpm for workspace management
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        npm install -g pnpm@$env:PNPM_VERSION
        
        # Configure pnpm proxy
        pnpm config set proxy http://webproxy.bcbst.com:80
        pnpm config set https-proxy https://webproxy.bcbst.com:443
        pnpm config set registry http://registry.npmjs.org/
        
        pnpm --version
    displayName: 'Install and Configure PNPM'
  
  # Install dependencies
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        pnpm install --frozen-lockfile
    displayName: 'Install Dependencies'
  
  # Security audit
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        pnpm audit --audit-level=$env:SECURITY_AUDIT_LEVEL
    displayName: 'Security Audit'
    continueOnError: false
  
  # Type checking
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        pnpm check-types
    displayName: 'Type Check'
  
  # Linting
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        pnpm lint
    displayName: 'Lint Code'
  
  # Build all packages and apps with Turborepo
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        pnpm build
    displayName: 'Build All Packages and Apps'
  
  # Run tests with coverage
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        pnpm test:coverage
    displayName: 'Run Tests with Coverage'
  
  # Performance analysis
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        pnpm perf:analyze
    displayName: 'Performance Analysis'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  
  # Output directory contents
  - task: PowerShell@2
    inputs:
      targetType: "inline"
      script: "dir $(System.DefaultWorkingDirectory)"
    displayName: Output Source Directory
  
  # Publish artifacts
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: "$(System.DefaultWorkingDirectory)"
      artifact: "BCBSTPortals"
    displayName: Publish Code Snapshot 